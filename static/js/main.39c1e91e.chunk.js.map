{"version":3,"sources":["logo.svg","Components/Sidenav.tsx","Components/DataTable.tsx","Components/DataChart.tsx","Components/DataTableOne.tsx","State/constants/action-types.ts","Containers/HomeContainer.tsx","State/actions/index.ts","App.tsx","reportWebVitals.js","State/reducers/index.ts","State/store/index.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","backgroundColor","height","paper","image","alignContent","textAlign","paddingTop","display","marginLeft","marginRight","heading5","subTitle","color","button","fontSize","borderRight","tags","flexDirection","flexWrap","justifyContent","tag","borderRadius","border","margin","padding","Sidenav","props","intro","classes","className","Paper","variant","src","alt","title","subtitle","map","index","table","minWidth","marginBottom","DataChart","data","sales","LineChart","width","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","strokeWidth","columns","field","headerName","DataTableOne","item","retailSales","toLocaleString","wholesaleSales","retailerMargin","id","style","length","rows","FETCH_DATA","HomeContainer","product","useSelector","state","dispatch","useDispatch","useEffect","fetch","then","res","json","response","payload","console","log","Grid","container","spacing","xs","header","alignItems","paddingLeft","logo","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39c1e91e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.d19ed00c.svg\";","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      backgroundColor: '#ffffff',\n      height: '100%'\n    },\n    paper: {\n      height: '100%'\n    },\n    image:{\n      height: 150,\n      alignContent: 'center',\n      textAlign: 'center',\n      paddingTop: 10,\n      display: \"block\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n      },\n    heading5:{\n      textAlign:'center'\n    },\n    subTitle:{\n      textAlign:'center',\n      color:'#d3d3d3',\n    },\n    button:{\n      fontSize :8,\n      borderRight :0,\n    },\n    tags:{\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    },\n    tag:{\n      borderRadius:10,\n      border:'2px solid grey',\n      margin: 5,\n      fontSize:9,\n      padding: 5 \n    }\n  }),\n);\n\nconst Sidenav = (props: any) => {\n    const tags = props?.intro?.tags?props.intro.tags:[]\n    const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n        <Paper variant = \"outlined\" className={classes.paper}>\n            <img src = {props.intro.image} className={classes.image} alt=\"Product Pic\"/>\n            <h5 className={classes.heading5}>{props.intro.title}</h5>\n            <h6 className = {classes.subTitle}>{props.intro.subtitle}</h6>\n            <div className={classes.tags}>\n              {tags.map((tag:string,index:number) => {\n               return <div className={classes.tag} key ={index}>{tag}</div>\n                })   \n              }\n            </div>\n        </Paper>\n    </div>\n  );\n}\n\nexport default Sidenav;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nconst createStrings=(num:number) =>{\n   return \"$\"+num.toLocaleString()\n}\n\n\n\nexport interface SalesType {\n    retailSales: number;\n    retailerMargin: number;\n    unitsSold: number;\n    weekEnding: string;\n    wholesaleSales: number;\n};\n\nexport const DataTable = (props: any) => {\n  const { sales} = props;\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Week Ending</TableCell>\n            <TableCell align=\"right\">Retail Sales</TableCell>\n            <TableCell align=\"right\">WholeSale Sales</TableCell>\n            <TableCell align=\"right\">Units Sold</TableCell>\n            <TableCell align=\"right\">Retailer Margin</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {sales?.length ? sales.map((row: any, index: number) => (\n            <TableRow key={index}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.weekEnding}\n              </TableCell>\n              <TableCell align=\"right\">{createStrings(row.retailSales)}</TableCell>\n              <TableCell align=\"right\">{createStrings(row.wholesaleSales)}</TableCell>\n              <TableCell align=\"right\">{row.unitsSold}</TableCell>\n              <TableCell align=\"right\">{createStrings(row.retailerMargin)}</TableCell>\n            </TableRow>\n          )) : null}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default DataTable;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\nimport Paper from '@material-ui/core/Paper';\n\n\nexport interface SalesType {\n    retailSales: number;\n    retailerMargin: number;\n    unitsSold: number;\n    weekEnding: string;\n    wholesaleSales: number;\n};\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 500,\n    },\n    paper:{\n      marginBottom:'20px'  \n    }\n  });\n\nconst DataChart = (props:any)=>{\n    const classes = useStyles();\n    const data = props?.data?.sales\n    return (\n      <Paper className={classes.paper}>\n        <LineChart\n          width={750}\n          height={350}\n          data={data}\n          margin={{\n            top: 30,\n            right: 30,\n            left: 30,\n            bottom: 30\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"weekEnding\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"retailSales\"\n            stroke=\"#82ca9d\"\n            strokeWidth={4}\n          />\n          <Line type=\"monotone\" dataKey=\"wholesaleSales\" stroke=\"#8884d8\" strokeWidth={4} />\n        </LineChart>\n      </Paper>\n    );\n}\n\nexport default DataChart","import React from 'react';\nimport { DataGrid, GridColDef } from '@material-ui/data-grid';\nimport { Paper } from '@material-ui/core';\n\nconst columns: GridColDef[] = [\n  { field:'weekEnding',headerName:'WEEK ENDING',width:150},\n  { field: 'retailSales', headerName: 'RETAIL SALES', width: 150 },\n  { field: 'wholesaleSales', headerName: 'WHOLESALE SALES', width: 150 },\n  { field: 'unitsSold', headerName: 'UNITS SOLD', width: 150 },\n  { field: 'retailerMargin', headerName: 'RETAILER MARGIN', width: 150 },\n];\n\nconst DataTableOne=(props:any)=> {\n\n    const data = props?.data?.sales?.map((item: any, index: number) => {\n      return {\n        ...item,\n        retailSales: `$${item.retailSales.toLocaleString()}`,\n        wholesaleSales: `$${item.wholesaleSales.toLocaleString()}`,\n        retailerMargin: `$${item.retailerMargin.toLocaleString()}`,\n        id: index + 1\n      }\n    }) || [];\n  return (\n    <Paper> \n      <div style={{ height: 300, width: '100%' }}>\n        {data?.length ? <DataGrid rows={data} columns={columns} /> : null }\n      </div>\n    </Paper>\n  );\n}\nexport default DataTableOne;","export const FETCH_DATA = 'FETCH_DATA';","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Sidenav,DataChart,DataTableOne } from '../Components';\nimport { getProductInfo } from '../State/actions';\nimport { Product } from '../State/reducers';\n\nconst HomeContainer = () => {\n  const product = useSelector((state: Product) => state.product);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getProductInfo())\n  }, [dispatch]);\n\n  console.log('----product', product);\n\n  return (\n    <Grid container spacing={2}>\n        {product ? (\n          <>\n            <Grid item xs={3}>\n              <Sidenav intro = {product}\n              />\n          </Grid>\n          <Grid item xs={9}>\n              <DataChart data={product}/>\n              <DataTableOne data={product}/>\n          </Grid>\n          </>\n        ) : null}\n    </Grid>\n  );\n}\n\nexport default HomeContainer;","import { FETCH_DATA } from \"../constants/action-types\";\n\nexport const getProductInfo = () => (dispatch: any) => {\n    return fetch(\"data.json\")\n        .then(res => res.json())\n        .then(response => {\n            dispatch({ type: FETCH_DATA, payload: response?.length ? response[0]: null})\n        })\n}","import React from 'react';\nimport logo from './logo.svg';\nimport { HomeContainer } from './Containers';\nimport './App.css';\n// import {Sidenav, DataTable} from '../Components'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: '#f5f7f9'\n    },\n    header: {\n      height: 70,\n      backgroundColor: '#06243f',\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: theme.spacing(2),\n      marginBottom: theme.spacing(5)\n    },\n    logo: {\n      height: 40,\n    },\n  }),\n);\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n        <header className={classes.header}>\n          <img src={logo} alt=\"Stackline Logo\" className={classes.logo}/>\n        </header>\n        <Container>\n          <HomeContainer />\n        </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FETCH_DATA } from \"../constants/action-types\";\n\nexport interface Product {\n    product: any\n}\n\nexport const initialState = {\n    product: {}\n}\n\nfunction rootReducer(state: Product = initialState, action: any ) {\n\n    if (action.type === FETCH_DATA) {\n        return {\n            product : action.payload\n        }\n    }\n\n    return state;\n}\n\nexport default rootReducer;","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './State/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}